openapi: 3.0.0
servers: []
info:
  description: This is the API of the Movie service
  version: 1.0.0
  title: Movie API
  contact:
    email: esteban.gomez@imt-atlantique.fr
  license:
    name: GPL v3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /:
    get:
      tags:
        - developers
      summary: home page of the service
      operationId: home
      description: |
        Nothing to do
      responses:
        '200':
          description: welcome message
          content:
            text/html:
              schema:
                type: string
                example: <h1 style='color:blue'>Welcome to the Movie service!</h1>
  /template:
    get:
      tags:
        - developers
      summary: template example
      operationId: template
      description: |
        Nothing to do
      responses:
        '200':
          description: HTML Template
          content:
            text/html:
              schema:
                type: string
                example: This is my HTML template for Movie service
  /help:
    get:
      tags:
        - developers
      summary: help example
      operationId: help
      description: |
        Nothing to do
      responses:
        '200':
          description: HTML Help Documentation
          content:
            text/html:
              schema:
                type: string
                example: /json get all database
  /json:
    get:
      tags:
        - developers
      summary: get the full JSON database
      operationId: get_json
      description: |
        Nothing to do
      responses:
        '200':
          description: full JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllMovies'
  /movies/{movie_id}:
    get:
      tags:
        - developers
      summary: get the movie by its id
      operationId: get_movie_by_id
      description: |
        By passing in the appropriate options, 
        you can get info of a Movie
      parameters:
        - name: movie_id
          in: path
          required: true
          description: Movie ID.
          schema:
            type: string
            minimum: 1
            maximum: 1
      responses:
        '200':
          description: Movie description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieItem'
        '400':
          description: Movie ID not found, you should create a movie by /movies/<movie_id> post route.
    post:
      tags:
        - admins
      summary: add a movie item
      operationId: create_movie
      description: Adds a movie to the system
      parameters:
        - name: movie_id
          in: path
          required: true
          description: Movie ID.
          schema:
            type: string
            minimum: 1
            maximum: 1
      responses:
        '200':
          description: Movie created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieItem'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieItem'
        description: Inventory item to add
    delete:
      tags:
        - admins
      summary: delete a movie item
      operationId: delete_movie
      description: Deletes a movie to the system
      parameters:
        - name: movie_id
          in: path
          required: true
          description: Movie ID.
          schema:
            type: string
            minimum: 1
            maximum: 1
      responses:
        '200':
          description: Movie deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieItem'
        '400':
          description: movie ID not found, you should check movies by /json get route
  /movies/{movie_id}/{rate}:
    put:
      tags:
        - developers
      summary: update movie rating
      operationId: update_movie_rating
      description: |
        By passing in the appropriate options, 
        you can change a Movie's rate
      parameters:
        - name: movie_id
          in: path
          required: true
          description: Movie id.
          schema:
            type: string
            minimum: 1
            maximum: 1
        - name: rate
          in: path
          required: true
          description: Movie new rate.
          schema:
            type: number
            minimum: 1
            maximum: 1
      responses:
        '200':
          description: Movie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieItem'
        '400':
          description: movie with this rate not found, you should check movies by /json get route
  /movies_by_title:
    get:
      tags:
        - developers
      summary: get the movie by its name
      operationId: get_movie_by_title
      description: |
        By passing in the appropriate options, 
        you can get info of a Movie
      parameters:
        - name: movie_title
          in: query
          required: true
          description: Movie title.
          schema:
            type: string
            minimum: 1
            maximum: 1
      responses:
        '200':
          description: Movie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieItem'
        '400':
          description: Movie ID not found, you should create a movie by /movies/<movie_id> post route.
  /movies_by_rate:
    get:
      tags:
        - developers
      summary: get the movie by its rate
      operationId: get_movie_by_rate
      description: |
        By passing in the appropriate options, 
        you can get info of Movies
      parameters:
        - name: movie_rate
          in: query
          required: true
          description: Movie rate.
          schema:
            type: number
            minimum: 1
            maximum: 1
      responses:
        '200':
          description: Movie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieItem'
        '400':
          description: movie with this rate not found, you should check movies by /json get route
components:
  schemas:
    AllMovies:
      type: object
      required:
        - movies
      properties:
        movies:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/MovieItem'
    MovieItem:
      type: object
      required:
        - title
        - rating
        - director
        - id
      properties:
        title:
          type: string
          example: The Martian
        rating:
          type: integer
          example: 7
        director:
          type: string
          example: Paul McGuigan
        id:
          type: string
          example: 39ab85e5-5e8e-4dc5-afea-65dc368bd7ab
