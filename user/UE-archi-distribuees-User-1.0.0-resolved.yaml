---
openapi: 3.0.0
servers: []

info:
  description: This is the API of the Movie service
  version: "1.0.0"
  title: Booking API
  contact:
    email: esteban.gomez@imt-atlantique.fr
  license:
    name: GPL v3
    url: 'https://www.gnu.org/licenses/gpl-3.0.en.html'
tags:
  - name: developers
    description: Operations available to regular developers

paths:
  /help:
    get:
      tags:
        - developers
      summary: help example
      operationId: help
      description: |
        Nothing to do
      responses:
        '200':
          description: HTML Help Documentation
          content:
            text/html:
              schema:
                type: string
                example: /json get all database

  /bookings_by_user_id/{userid}:
    get:
      tags:
        - developers
      summary: get the user bookings by the user id
      operationId: get_user_booking_id
      description: |
        By passing in the appropriate options, 
        you can get info about user booking
      parameters:
        - name: userid
          in: path
          required: true
          description: User ID.
          schema:
            type : string
            minimum: 1
            maximum: 1
      responses:
        '200':
          description: Booking description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '401':
          description: User don't have booking
        '402':
          description: User not exist

  /bookings_details_by_user_id/{userid}:
    get:
      tags:
        - developers
      summary: get the user bookings details by the user id
      operationId: get_user_booking_details_id
      description: |
        By passing in the appropriate options, 
        you can get info and details about user booking
      parameters:
        - name: userid
          in: path
          required: true
          description: User ID.
          schema:
            type : string
            minimum: 1
            maximum: 1
      responses:
        '200':
          description: Booking description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingDetails'
        '401':
          description: User don't have booking
        '402':
          description: User not exist

components:
  schemas:
    Booking:
      type: object
      required:
        - userid
        - dates
      properties:
        userid:
          type: string
          example: chris_rivers
        dates:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/Dates'

    Dates:
      type: object
      required:
        - date
        - movies
      properties:
        date:
          type: string
          example: 20151201
        movies:
          type: array
          items:
            type: string
          example:
            - 267eedb8-0f5d-42d5-8f43-72426b9fb3e6
            - a8034f44-aee4-44cf-b32c-74cf452aaaae

    BookingDetails:
      type: object
      required:
        - userid
        - dates
      properties:
        userid:
          type: string
          example: chris_rivers
        dates:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/DatesDetails'

    DatesDetails:
      type: object
      required:
        - date
        - movies
      properties:
        date:
          type: string
          example: 20151201
        movies:
          type: object
          $ref: '#/components/schemas/Movies'

    Movies:
      type: object
      required:
        - title
        - rating
        - director
        - id
      properties:
        title:
          type: string
          example: The Martian
        rating:
          type: integer
          example: 7
        director:
          type: string
          example: Paul McGuigan
        id:
          type: string
          example: 39ab85e5-5e8e-4dc5-afea-65dc368bd7ab